var module$realtime_callbacks={};var posid$$module$realtime_callbacks=0;var elemid$$module$realtime_callbacks=0;var x$$module$realtime_callbacks=0;
function registerTypes$$module$realtime_callbacks(){Util.log.console("Registering types...");try{VizDataModel.prototype.positions=gapi.drive.realtime.custom.collaborativeField("positions");VizDataModel.prototype.relations=gapi.drive.realtime.custom.collaborativeField("relations");VizDataModel.prototype.elements=gapi.drive.realtime.custom.collaborativeField("elements");VizDataModel.prototype.meta=gapi.drive.realtime.custom.collaborativeField("meta");VizDataModel.prototype.nuggets=gapi.drive.realtime.custom.collaborativeField("nuggets");
gapi.drive.realtime.custom.registerType(VizDataModel,"VizDataModel");gapi.drive.realtime.custom.setInitializer(VizDataModel,doInitialize$$module$realtime_callbacks)}catch(ex){Util.log.console("Error occured during registering the real time Data types");Util.log.console(ex)}}
function saveToDriveFile$$module$realtime_callbacks(){var boundary="-------314159265358979323846";var delimiter="\r\n--"+boundary+"\r\n";var close_delim="\r\n--"+boundary+"--";Util.log.console("Write to file:"+AppContext.project.fileId);var contentType="application/json";var vizdataContent={"vizdata":{"positions":AppContext.vizdata.getPositions(),"relations":AppContext.vizdata.getRelations(),"elements":AppContext.vizdata.getElements(),"nuggets":AppContext.vizdata.getNuggets(),"meta":AppContext.vizdata.getTitle()}};
var fileMetadata={"title":AppContext.project.projectTitle,"mimeType":contentType};var multipartRequestBody=delimiter+"Content-Type: application/json\r\n\r\n"+JSON.stringify(fileMetadata)+delimiter+"Content-Type: "+contentType+"\r\n"+"\r\n"+JSON.stringify(vizdataContent)+close_delim;var request=gapi.client.request({"path":"/upload/drive/v2/files/"+AppContext.project.fileId,"method":"PUT","params":{"uploadType":"multipart","alt":"json"},"headers":{"Content-Type":'multipart/mixed; boundary="'+boundary+
'"'},"body":multipartRequestBody});callback=function(file){};request.execute(callback)}function doPosValuesAdded$$module$realtime_callbacks(event){$.map(event.values,AppContext.grid.posValueAddedCallback);saveToDriveFile$$module$realtime_callbacks()}function doPosValueRemoved$$module$realtime_callbacks(event){$.map(event.values,AppContext.grid.posValueRemovedCallback);saveToDriveFile$$module$realtime_callbacks()}
function doContentValueChanged$$module$realtime_callbacks(event){AppContext.grid.reloadTypeahead(AppContext.vizdata.getElements());if(event.type==gapi.drive.realtime.EventType.VALUES_ADDED)AppContext.graph.addElement(event.values);else if(event.type==gapi.drive.realtime.EventType.VALUES_REMOVED)AppContext.graph.removeElement(event.values);saveToDriveFile$$module$realtime_callbacks()}
function doRelValueChanged$$module$realtime_callbacks(event){Util.log.console("Relations value changed...");if(event.type==gapi.drive.realtime.EventType.VALUES_ADDED)AppContext.graph.addRelation(event.values);else if(event.type==gapi.drive.realtime.EventType.VALUES_REMOVED)AppContext.graph.removeRelation(event.values);saveToDriveFile$$module$realtime_callbacks()}
function doMetaValueChanged$$module$realtime_callbacks(evt){AppContext.project.projectTitle=AppContext.vizdata.getTitle();Util.log.console("Project Title");Util.log.console(AppContext.project.projectTitle);AppContext.project.updateTitleText();saveToDriveFile$$module$realtime_callbacks()}
function doNuggetValueChanged$$module$realtime_callbacks(evt){Util.log.console(evt);if(!evt.isLocal)if(evt.type==gapi.drive.realtime.EventType.VALUES_ADDED){Util.log.console(evt.values);AppContext.grid.prependNuggetToDisplay(evt.values)}else if(evt.type==gapi.drive.realtime.EventType.VALUES_REMOVED)AppContext.vizdata.removeNugget(evt.values);saveToDriveFile$$module$realtime_callbacks()}
function repopulateCollaboratorList$$module$realtime_callbacks(evt){Util.log.console(evt);loadCollabaorators$$module$realtime_callbacks();saveToDriveFile$$module$realtime_callbacks()}
function doInitialize$$module$realtime_callbacks(){Util.log.console("doInitialize");var model=gapi.drive.realtime.custom.getModel(this);this.positions=model.createList();this.elements=model.createList();this.relations=model.createList();this.nuggets=model.createList();this.meta=model.createList();AppContext.project.getFileDetails();model.beginCompoundOperation();this.updateTitle(AppContext.project.projectTitle);model.endCompoundOperation()}
function initializeModel$$module$realtime_callbacks(model){AppContext.vizdata=model.create("VizDataModel");Util.log.console("Initial model state for new project has been created");model.getRoot().set("vizdata",AppContext.vizdata)}
downloadFile=function(file,callback){if(file.downloadUrl){var accessToken=gapi.auth.getToken().access_token;var xhr=new XMLHttpRequest;xhr.open("GET",file.downloadUrl);xhr.setRequestHeader("Authorization","Bearer "+accessToken);xhr.onload=function(){callback(xhr.responseText)};xhr.onerror=function(){callback(null)};xhr.send()}else callback(null)};
function onFileLoaded$$module$realtime_callbacks(doc){function loadCollaborators(){alert(doc.getCollaborators().length)}Util.log.console("On file loaded...");fileId=rtclient.params["fileIds"];AppContext.project.getFileDetails();fetchClientDetails(AppContext.project.getUserInfo);doc.addEventListener(gapi.drive.realtime.EventType.COLLABORATOR_LEFT,repopulateCollaboratorList$$module$realtime_callbacks);doc.addEventListener(gapi.drive.realtime.EventType.COLLABORATOR_JOINED,repopulateCollaboratorList$$module$realtime_callbacks);
loadDataFromFile=function(fileContent){AppContext.vizdata=doc.getModel().getRoot().get("vizdata");if(fileContent!=="")try{toLoad=JSON.parse(fileContent).vizdata;AppContext.vizdata.positions.pushAll(toLoad.positions);AppContext.vizdata.elements.pushAll(toLoad.elements);AppContext.vizdata.relations.pushAll(toLoad.relations);AppContext.vizdata.nuggets.pushAll(toLoad.nuggets);AppContext.vizdata.meta.push(toLoad.meta)}catch(ex){Util.log.console("The file contents could not be loaded.");Util.log.console(ex)}try{if(AppContext.vizdata.positions){AppContext.vizdata.positions.addEventListener(gapi.drive.realtime.EventType.VALUES_ADDED,
doPosValuesAdded$$module$realtime_callbacks);AppContext.vizdata.positions.addEventListener(gapi.drive.realtime.EventType.VALUES_REMOVED,doPosValueRemoved$$module$realtime_callbacks)}else{Util.log.console("Listeners to positional information cannot be registered successfully.\n File load failed.");alert("File loading failed")}if(AppContext.vizdata.elements){AppContext.vizdata.elements.addEventListener(gapi.drive.realtime.EventType.VALUES_ADDED,doContentValueChanged$$module$realtime_callbacks);AppContext.vizdata.elements.addEventListener(gapi.drive.realtime.EventType.VALUES_REMOVED,
doContentValueChanged$$module$realtime_callbacks)}else{Util.log.console("Listeners to the Content-Elements cannot be registered successfully. \n File loading failed");alert("file loading failed")}if(AppContext.vizdata.relations){AppContext.vizdata.relations.addEventListener(gapi.drive.realtime.EventType.VALUES_ADDED,doRelValueChanged$$module$realtime_callbacks);AppContext.vizdata.relations.addEventListener(gapi.drive.realtime.EventType.VALUES_REMOVED,doRelValueChanged$$module$realtime_callbacks)}else Util.log.console("Listeners for relational information could not be attached.\n File loading failed");
if(AppContext.vizdata.nuggets){AppContext.vizdata.nuggets.addEventListener(gapi.drive.realtime.EventType.VALUES_ADDED,doNuggetValueChanged$$module$realtime_callbacks);AppContext.vizdata.nuggets.addEventListener(gapi.drive.realtime.EventType.VALUES_REMOVED,doNuggetValueChanged$$module$realtime_callbacks)}else Util.log.console("AppContext.vizdata.nuggets is not defined, hence skipping event registration");if(AppContext.vizdata.meta){AppContext.vizdata.meta.addEventListener(gapi.drive.realtime.EventType.VALUES_ADDED,
doMetaValueChanged$$module$realtime_callbacks);AppContext.vizdata.meta.addEventListener(gapi.drive.realtime.EventType.VALUES_REMOVED,doMetaValueChanged$$module$realtime_callbacks)}else Util.log.console("Meta Information could not be loaded. Skipping meta info event registration")}catch(ex$$0){Util.log.console("Error occured while registering one of the listeners: ");Util.log.console(ex$$0)}AppContext.grid.displayAllPositions(AppContext.vizdata.getPositions());AppContext.grid.activateListeners();AppContext.grid.activateZoomListeners();
AppContext.grid.activateTypeahead(AppContext.vizdata.getElements())};fileObtainedCallback=function(resp){downloadFile(resp,loadDataFromFile)};rtclient.getFileMetadata(rtclient.params.fileIds,fileObtainedCallback)}
function loadCollabaorators$$module$realtime_callbacks(){var strs=["String 1","String 2","String 3"];var list=document.createElement("ul");for(var i in strs){var anchor=document.createElement("a");anchor.innerText=strs[i].displayName;var elem=document.createElement("li");elem.appendChild(anchor);list.appendChild(elem);document.getElementById("collaborator_pane").appendChild(list)}}
function removeCollabaorators$$module$realtime_callbacks(){document.getElementById("collaborator_pane").innerHTML=""};